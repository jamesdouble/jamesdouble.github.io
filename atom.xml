<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JamesDouble</title>
  <subtitle>Share some &#39;Cool&#39; stuff about IOS-Dev</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-01-04T16:39:54.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>JamesKuo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JDJellyButton-可移動導航按鈕</title>
    <link href="http://yoursite.com/2016/12/18/JDJellyButton-%E5%8F%AF%E7%A7%BB%E5%8B%95%E5%B0%8E%E8%88%AA%E6%8C%89%E9%88%95/"/>
    <id>http://yoursite.com/2016/12/18/JDJellyButton-可移動導航按鈕/</id>
    <published>2016-12-18T09:59:39.000Z</published>
    <updated>2017-01-04T16:39:54.000Z</updated>
    
    <content type="html"><![CDATA[<p><em>本篇教程使用Swift</em> 源碼:<a href="https://github.com/jamesdouble/JDJellyButton" target="_blank" rel="external">https://github.com/jamesdouble/JDJellyButton</a><br>，以下稱JDJellyButton</p>
<h2 id="0-何謂導航浮動按鈕"><a href="#0-何謂導航浮動按鈕" class="headerlink" title="#0)何謂導航浮動按鈕"></a>#0)何謂導航浮動按鈕</h2><p>当你的应用开发到一定程度的规模时，必须要有个十分清晰明了的导航功能，才不会让使用者卡在某一页，不知道如何前往他们想去的页面。<br>常见的导航方式，不外乎最常用UITabBarController、UINavigationBar，另外有一种虽然常见，但是因为不是IOS原生就有的UIControl，所以还是比较少人使用，那就是 “<strong>floating navigation button</strong>“。<br>之所以会有<strong>‘Floating’</strong>这个字眼，是大多这样的导航按钮会凌驾在所有视图控制器(UI…ViewController)上，不管底下的视图控制器如何切页他都会保持在同样的位置。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/3776017-66e2600fbb3fb27a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/250" alt="浮动导航按钮"></p>
<p>####0.1)JDJellyButton特色：按鈕群組<br>源碼其中一個特色就是浮動按鈕附有群組的功能，能讓一個浮動按鈕能包含更多的子按鈕以處理更多不同的事件。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/3776017-fba56ac39907311a.gif?imageMogr2/auto-orient/strip" alt="jellybutton_delegate.gif"></p>
<p>####0.2)UIView or UIButton?<br>大部分的按钮控件虽然都是‘按钮’，但是比起继承实作UIButton,还不如继承实作他的父类别UIView, 可做的事比较多，限制也比较少，本文的JDJellyButton继承自UIView。</p>
<p>####0.3)Gesturer or UIResponder<br>因为我们是自己实作继承UIView的类别，比起每个按钮都要加上手势，我比较偏好在类别下实作几个常见的UIResponder方法 - touchesBegan, touchesMoved。一来省去还要宣告selector这样拐个弯的做法。</p>
<h2 id="1-代碼架構＆解析"><a href="#1-代碼架構＆解析" class="headerlink" title="#1)代碼架構＆解析"></a>#1)代碼架構＆解析</h2><p>以下是JDJelllyButton的元件，我將由底層的子元件往上講解。<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> <span class="type">MainButton</span>:<span class="type">JDJellyMainButton</span>!</div><div class="line"><span class="keyword">var</span> <span class="type">Container</span>:<span class="type">JelllyContainer</span>!</div><div class="line"><span class="keyword">var</span> <span class="type">RootView</span>:<span class="type">UIView</span>?</div><div class="line"><span class="keyword">var</span> delegate:<span class="type">JellyButtonDelegate</span>?</div><div class="line"><span class="keyword">var</span> _datasource:<span class="type">JDJellyButtonDataSource</span>?</div><div class="line"><span class="keyword">var</span> jellybutton:<span class="type">JDJellyButtonView</span>?</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/3776017-f4e56d283ef3edcc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="架构图"></p>
<p>#####1.1)ButtonGroups<br>紀錄了多個JDJellyButtonView跟它們個別的位置，此為“一組”Button<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ButtonGroups</span> </span>&#123;</div><div class="line">    <span class="keyword">var</span> buttongroup:[<span class="type">JDJellyButtonView</span>]!</div><div class="line">    <span class="keyword">var</span> groupPositionDiff:[<span class="type">CGPoint</span>]?</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>#####1.2)JDJellyButtonView:UIView<br>此一类别是实作每个按钮的基础样式与点击，一个圆配一张图片。<br>别忘了要处理点击的事件。我做的方法是通知委任（上层接口JDJellyButton）被点击的是第几的Group的第几个Button。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">JellyButtonDelegate</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">func</span> <span class="title">JellyButtonHasBeenTap</span><span class="params">(touch:UITouch,image:UIImage,groupindex:Int,arrindex:Int)</span></span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">touchesBegan</span><span class="params">(<span class="number">_</span> touches: Set&lt;UITouch&gt;, with event: UIEvent?)</span></span></div><div class="line">    &#123;</div><div class="line">       <span class="keyword">let</span> image = <span class="keyword">self</span>.imgView?.image</div><div class="line">       <span class="keyword">let</span> groupindex = dependingMainButton?.getGroupIndex()</div><div class="line">       <span class="keyword">let</span> arrindex = dependingMainButton?.getJellyButtonIndex(jelly: <span class="keyword">self</span>)</div><div class="line">       <span class="built_in">print</span>(<span class="string">"<span class="subst">\(groupindex)</span>,<span class="subst">\(arrindex)</span>"</span>)</div><div class="line">       tapdelegate?.<span class="type">JellyButtonHasBeenTap</span>(touch: touches.first!,image: image!,groupindex: groupindex!,arrindex: arrindex!)</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>####1.3)JDJellyMainButton:JDJellyButtonView<br>本控件最主要的类别，也是整个导航浮动按钮的主体。样式跟其他的按钮一样，差别是在点击后的事件以及它可以拖动，所以就直接继承<br><strong>JDJellyButtonView</strong>并且覆写touchesBegan, touchesMoved，并且也由它来管理ButtonGroups。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/3776017-bfcdafda180e208b.gif?imageMogr2/auto-orient/strip" alt="JDJellyButtonDemo.gif"></p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">    <span class="function"><span class="keyword">func</span> <span class="title">appendButtonGroup</span><span class="params">(bgs:ButtonGroups)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">var</span> temp_bgs:<span class="type">ButtonGroups</span> = bgs</div><div class="line">        <span class="keyword">for</span> jelly <span class="keyword">in</span> temp_bgs.buttongroup</div><div class="line">        &#123;</div><div class="line"><span class="comment">//让每个按钮知道自己依附的是谁</span></div><div class="line"><span class="comment">//因為只有MainButton知道子Button位在第幾個Group</span></div><div class="line">            jelly.dependingMainButton = <span class="keyword">self</span></div><div class="line">        &#125;</div><div class="line">        temp_bgs.groupPositionDiff = [<span class="type">CGPoint</span>]()</div><div class="line">        </div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;bgs.buttongroup.<span class="built_in">count</span></div><div class="line">        &#123;</div><div class="line"><span class="comment">//计算位置</span></div><div class="line">            <span class="keyword">let</span> cgpoint:<span class="type">CGPoint</span> = <span class="type">CGPoint</span>(x: x[i] , y: y[i])</div><div class="line">            temp_bgs.groupPositionDiff?.append(cgpoint)</div><div class="line">        &#125;</div><div class="line">        buttongroups.append(temp_bgs)</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>需要注意的是因为JDJellyButton有分群组，而触发的条件是“<em>长按</em>”，因此我们不再touchesBegan做立即展开，而是在touchesEnded处理。<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"> <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">touchesBegan</span><span class="params">(<span class="number">_</span> touches: Set&lt;UITouch&gt;, with event: UIEvent?)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="comment">/*</span></div><div class="line">          略</div><div class="line">        */</div><div class="line">        <span class="keyword">if</span>(<span class="type">Expanding</span>)</div><div class="line">        &#123;</div><div class="line">            expandignMove = <span class="literal">true</span></div><div class="line">            closingButtonGroup(expandagain: <span class="literal">false</span>)</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//紀錄點下去的時間</span></div><div class="line">        <span class="type">LastTime</span> = touches.first!.timestamp</div><div class="line">         <span class="comment">/*</span></div><div class="line">          略</div><div class="line">        */</div><div class="line">    &#125;</div><div class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">touchesEnded</span><span class="params">(<span class="number">_</span> touches: Set&lt;UITouch&gt;, with event: UIEvent?)</span></span> &#123;</div><div class="line">        <span class="comment">/*</span></div><div class="line">          略</div><div class="line">        */</div><div class="line">        <span class="comment">//短按</span></div><div class="line">        <span class="keyword">if</span>(touches.first!.timestamp - <span class="type">LastTime</span>! &lt; <span class="number">0.15</span>)&#123;</div><div class="line">            <span class="keyword">if</span>(!<span class="type">Expanding</span>) &#123;</div><div class="line">                expandButtonGroup()</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> &#123;</div><div class="line">                closingButtonGroup(expandagain: <span class="literal">false</span>)</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>    <span class="comment">//長按</span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">if</span>(!<span class="type">Moving</span>)</div><div class="line">            &#123;</div><div class="line">                switchButtonGroup()</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(expandignMove &amp;&amp; <span class="type">Moving</span>)</div><div class="line">            &#123;</div><div class="line">                expandButtonGroup()</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="type">Moving</span> = <span class="literal">false</span></div><div class="line">        expandignMove = <span class="literal">false</span></div><div class="line">        <span class="comment">/*</span></div><div class="line">          略</div><div class="line">        */</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>#####1.4)JelllyContainer:UIView<br>本来并没有打算制作这个类别，后来遇到了一个非常严重的问题：虽然按钮以外透明的地方看似可点击后方的其他View，但是其实会点到浮动导航按钮的整个背景，进而无法触发后方使用者原本的东西。上网爬了之后，发现需覆写point这个Function。<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">point</span><span class="params">(inside point: CGPoint, with event: UIEvent?)</span></span> -&gt; <span class="type">Bool</span> &#123;</div><div class="line">        <span class="keyword">for</span> subview <span class="keyword">in</span> subviews &#123;</div><div class="line">            <span class="keyword">if</span> !subview.isHidden &amp;&amp; subview.alpha &gt; <span class="number">0</span> &amp;&amp; subview.isUserInteractionEnabled &amp;&amp; subview.point(inside: convert(point, to: subview), with: event) &#123;</div><div class="line">                <span class="keyword">return</span> <span class="literal">true</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;本篇教程使用Swift&lt;/em&gt; 源碼:&lt;a href=&quot;https://github.com/jamesdouble/JDJellyButton&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/jamesdou
    
    </summary>
    
      <category term="Swift" scheme="http://yoursite.com/categories/Swift/"/>
    
    
      <category term="UIButton" scheme="http://yoursite.com/tags/UIButton/"/>
    
      <category term="UIView" scheme="http://yoursite.com/tags/UIView/"/>
    
  </entry>
  
  <entry>
    <title>JDPorgressRoundView - 如何實作</title>
    <link href="http://yoursite.com/2016/12/16/post/"/>
    <id>http://yoursite.com/2016/12/16/post/</id>
    <published>2016-12-16T04:25:14.000Z</published>
    <updated>2016-12-18T09:49:19.000Z</updated>
    
    <content type="html"><![CDATA[<hr>
<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>JDProgressRoundView is Stylish Process Meter Based on UIProgressView.<br>It growns 5% every tap, or you can just set the progress u want.<br>Thanks for using.</p>
<p>Source Link : <a href="https://github.com/jamesdouble/JDProgressRoundView" target="_blank" rel="external">https://github.com/jamesdouble/JDProgressRoundView</a></p>
<a id="more"></a>
<p>JDProgressRoundView 是我在16年中自制的一个IOS UI元件,<br>他的功能基本上与UIProgressView类似，用于表达一个Task的进度。<br>不同的是，它有多种表达进度的方式，有些还自带动画。</p>
<p><img src="../../../../images/JDProgressRoundView/DownToTop.png?raw=true" alt="Alt text" title="DownToTop"> <img src="../../../../images/JDProgressRoundView/water.gif?raw=true" alt="Alt text" title="DownToTop"> </p>
<p>本文章將介紹重點技巧 - CALayer</p>
<p>##CALayer</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> <span class="type">VC</span> = <span class="type">UIViewController</span>()</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;&lt;p&gt;JDProgressRoundView is Stylish Process Meter Based on UIProgressView.&lt;br&gt;It growns 5% every tap, or you can just set the progress u want.&lt;br&gt;Thanks for using.&lt;/p&gt;
&lt;p&gt;Source Link : &lt;a href=&quot;https://github.com/jamesdouble/JDProgressRoundView&quot;&gt;https://github.com/jamesdouble/JDProgressRoundView&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Swift" scheme="http://yoursite.com/categories/Swift/"/>
    
    
      <category term="UIView" scheme="http://yoursite.com/tags/UIView/"/>
    
      <category term="Swift" scheme="http://yoursite.com/tags/Swift/"/>
    
      <category term="Custom Control" scheme="http://yoursite.com/tags/Custom-Control/"/>
    
      <category term="UIAnimation" scheme="http://yoursite.com/tags/UIAnimation/"/>
    
      <category term="Layer" scheme="http://yoursite.com/tags/Layer/"/>
    
  </entry>
  
</feed>
